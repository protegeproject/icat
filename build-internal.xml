<?xml version = "1.0" encoding = "UTF-8"?>
<project name = "web-protege" default = "init" basedir = ".">

	<!-- Global properties, e.g., location of Subversion repository for checkouts, etc. -->
	<property file = "../global.properties"/>
	
	<!-- Local properties -->
	<property name = "project.name" value = "web-protege"/>
	<property name = "dist.dir" value = "./dist"/>
	<property name = "lib.dir" value = "war/WEB-INF/lib"/>
	<property name = "out.dir" value = "war/WEB-INF/classes"/>
	<property name = "src.dir" value = "./src"/>
	<property name = "war.dir" value = "./war"/>

	<!-- Path to GWT SDK -->
	<property name = "gwt.sdk" location = "C:\eclipse\plugins\com.google.gwt.eclipse.sdkbundle.win32_1.7.0.v200907291526\gwt-windows-1.7.0" />
	
	<!-- Project classpath -->
	<path id = "project.class.path">
		<pathelement location = "${out.dir}"/>

		<!-- GWT SDK stuff -->
		<pathelement location = "${gwt.sdk}/gwt-user.jar"/>
		<fileset dir = "${gwt.sdk}" includes = "gwt-dev*.jar"/>

		<!-- All additional libs from lib directory -->
		<fileset dir = "${lib.dir}" includes = "**/*.jar"/>
		
		<!-- Protege dependencies -->
		
		<!-- Protege Core -->
        <pathelement path = "${protege.jar}"/>
		<fileset dir = "${protege.dir}/lib" includes = "looks-2.1.3.jar, unicode_panel.jar"/>
		
		<!-- Protege-OWL -->
        <pathelement path = "${protege-owl.jar}"/>
		<fileset dir = "${owl.dir}/lib" excludes = "ekitspell.jar, json.jar, junit.jar, kazuki.jar, lucene-core-2.3.1.jar, swrl-jess-bridge.jar">
			<include name = "**/*.jar" /> 
		</fileset>
		
		<!-- Protege BioPortal Reference Plugin (not part of the 3.4.1 release, will be in 3.4.2) -->
		<pathelement path = "C:\Program Files\Protege_3.4.1\plugins\edu.stanford.bmir.protegex.bp.ref\bioportalReference.jar"/>

		<!-- Protege Change Management -->
		<pathelement path = "${change-management.jar}"/>

		<!-- Protege Chat -->
		<pathelement path = "${chat.jar}"/>
		
		<!-- Protege Collab -->
		<pathelement path = "${protege-collab.jar}"/>

		<!-- Protege RDF Backend -->
		<pathelement path = "${rdf-backend.jar}"/>

		<!-- Protege Standard Extensions (this is a custom JAR file, not part of the 3.4.1 release due to some commit/compile issues) -->
		<pathelement path = "C:\Program Files\Protege_3.4.1\plugins\edu.stanford.smi.protegex.standard_extensions\standard-extensions.jar"/>
	</path>
	
	<!-- =================================================================== -->
	<!-- INIT -->
	<!-- =================================================================== -->
	<target name = "init">
		<tstamp/>
	</target>

	<!-- =================================================================== -->
	<!-- PREPARE-SRC - Checkout WebProtege sources -->
	<!-- =================================================================== -->
	<target name = "prepare-src" depends = "init" description = "Checkout WebProtege sources">
		<mkdir dir = "${src.dir}"/>
		<mkdir dir = "${war.dir}"/>

		<!-- get source code from subversion repository -->
		<exec executable = "cmd.exe" dir = "${batch.files}" os = "${os}">
			<arg line = "/c checkout ${svn.core.url}/${project.name}/trunk ../${project.name} --non-recursive"/>
		</exec>
		
		<exec executable = "cmd.exe" dir = "${batch.files}" os = "${os}">
			<arg line = "/c checkout ${svn.core.url}/${project.name}/trunk/src ../${project.name}/${src.dir}"/>
		</exec>
		
		<exec executable = "cmd.exe" dir = "${batch.files}" os = "${os}">
			<arg line = "/c checkout ${svn.core.url}/${project.name}/trunk/war ../${project.name}/${war.dir}"/>
		</exec>
	</target>
	
	<!-- =================================================================== -->
	<!-- LIBS - Copy libs to WEB-INF/lib -->
	<!-- =================================================================== -->
	<target name = "libs" description = "Copy libs to WEB-INF/lib">
		<!-- GWT libs -->
		<copy todir = "${lib.dir}" file = "${gwt.sdk}/gwt-servlet.jar" />

		<!-- Protege libs -->
		<copy todir = "${lib.dir}">
			<!-- protege-core -->
			<fileset dir = "${protege.dir}/dist" includes = "protege.jar"/>
			<fileset dir = "${protege.dir}/lib" includes = "looks-2.1.3.jar, unicode_panel.jar"/>

			<!-- protege-owl -->
			<fileset dir = "${owl.dir}/dist/" includes = "protege-owl.jar"/>
			<fileset dir = "${owl.dir}/lib" includes = "**/*.jar" excludes = "ekitspell.jar, json.jar, junit.jar, kazuki.jar, lucene-core-2.3.1.jar, swrl-jess-bridge.jar"/>
			
			<!-- bioportal-reference-plugin -->
			<fileset dir = "C:\Program Files\Protege_3.4.1\plugins\edu.stanford.bmir.protegex.bp.ref" includes = "bioportalReference.jar"/>

			<!-- change-management -->
			<fileset dir = "${change-management.dir}/dist" includes = "change-management.jar, change-model.jar"/>

			<!-- protege-collab -->
			<fileset dir = "${protege-collab.dir}/dist" includes = "protege-collab.jar"/>

			<!-- chat -->
			<fileset dir = "${chat.dir}/dist" includes = "chat.jar"/>
			
			<!-- rdf-backend -->
			<fileset dir = "${rdfBackend.dir}/dist" includes = "rdf-backend.jar"/>
			<fileset dir = "${rdfBackend.dir}/lib" includes = "rdf-api.jar"/>
			
			<!-- standard-extensions -->
			<fileset dir = "${standardExtensions.dir}/dist" includes = "standard-extensions.jar"/>
		</copy>
		
		<!-- Any additional libs that need to be copied should go here -->
	</target>
	
	<!-- =================================================================== -->
	<!-- JAVAC - Compile Java source -->
	<!-- =================================================================== -->
	<target name = "javac" depends = "prepare-src, libs" description = "Compile java source">
		<mkdir dir = "${out.dir}"/>
		
		<javac srcdir = "${src.dir}" destdir = "${out.dir}" includes = "edu/**" source = "1.5" target = "1.5" debug = "true" debuglevel = "lines, vars, source" includeAntRuntime = "no">
			<classpath refid = "project.class.path"/>
		</javac>
		
		<copy todir = "${out.dir}">
			<fileset dir = "src" excludes = "**/*.java"/>
		</copy>
	</target>
	
	<!-- =================================================================== -->
	<!-- GWTC - GWT compile to JavaScript -->
	<!-- =================================================================== -->
	<target name = "gwtc" depends = "javac" description = "GWT compile to JavaScript">
		<!-- Must use fork="true" here.  If not, GWTCompiler fails with "No source path entries; expect subsequent failures".  
			  No explanation is given in forums about why adding this attribute solves errors.  See thread on GWT forum:
			  http://groups.google.com/group/Google-Web-Toolkit/browse_thread/thread/086d288e06aba18b -->
		<java failonerror = "true" fork = "true" classname = "com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location = "${src.dir}"/>
				<path refid = "project.class.path"/>
			</classpath>

			<!-- Add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value = "-Xmx500M"/>

			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value = "edu.stanford.bmir.protege.web.WebProtege"/>
		</java>
	</target>
	
	<!-- =================================================================== -->
	<!-- BUILD - Build WebProtege -->
	<!-- =================================================================== -->
	<target name = "build" depends = "gwtc" description = "Build WebProtege" />

	<!-- =================================================================== -->
	<!-- WAR - Create a WebProtege WAR file -->
	<!-- =================================================================== -->
	<target name = "war" depends = "build" description = "Create a WebProtege WAR file">
		<mkdir dir = "${dist.dir}" />
		
		<!-- Don't know yet why this file has to go into the GWT module directory...  If it's not there, WebProtege throws 
              404 error of "The requested resource (/webprotege/webprotege/collabProtege_OWL.jnlp) is not available". -->
		<copy file = "${war.dir}/collabProtege_OWL.jnlp" todir = "${war.dir}/webprotege"/>
		
		<zip destfile = "${dist.dir}/webprotege.war" basedir = "${war.dir}" excludes = "logs/**" update = "true"/>
	</target>

	<!-- =================================================================== -->
	<!-- HOSTED - Run WebProtege in hosted mode -->
	<!-- =================================================================== -->
	<target name = "hosted" depends = "javac" description = "Run WebProtege in hosted mode">
		<java failonerror = "true" fork = "true" classname = "com.google.gwt.dev.HostedMode">
			<classpath>
				<pathelement location = "${src.dir}"/>
				<path refid="project.class.path"/>
		    </classpath>
			<jvmarg value="-Xmx550M"/>
			<arg value="-startupUrl"/>
			<arg value="WebProtege.html"/>
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="edu.stanford.bmir.protege.web.WebProtege"/>
		</java>
	</target>

	<!-- =================================================================== -->
	<!-- CLEAN - Clean this project -->
	<!-- =================================================================== -->
	<target name = "clean" depends = "init" description = "Clean this project">
		<delete dir = "${dist.dir}"/>
		<delete dir = "${src.dir}"/>
		<delete dir = "${war.dir}"/>
	</target>

</project>